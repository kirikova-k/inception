version: '3.5'
services:
  mariadb:
    container_name: mariadb
    build: ./requirements/mariadb
    hostname: localhost_mariadb
    restart: always
    env_file: .env
    volumes:
      - db:/var/lib/mysql
    networks:
      - project
    ports:
      - "3306:3306"

  wordpress:
    container_name: wordpress
    build: ./requirements/wordpress
    hostname: localhost_wordpress
    env_file: .env
    volumes:
      - wp:/var/www/html/wordpress
    networks:
      - project
    depends_on:
      - mariadb
    ports:
      - "9000:9000"

  nginx:
    container_name: nginx
    build: ./requirements/nginx
    hostname: localhost_nginx
    volumes:
      - wp:/var/www/html/wordpress
    networks:
      - project
    depends_on:
      - wordpress
    ports:
      - "443:443"

  redis:
    container_name: redis
    build: requirements/bonus/redis
    ports:
      - "6379:6379"
    networks:
      - project
    restart: always

  ftp_server:
    build: requirements/bonus/ftp-server
    container_name: ftp_server
    ports:
      - "21:21"
      - "20:20"
      - "21100-21110:21100-21110"
    volumes:
      - wp:/var/www/html/wordpress
    networks:
     - project
    restart: always
    env_file: .env

  portainer:
    # image: portainer/portainer-ce:latest
    build: requirements/bonus/portainer
    container_name: portainer
    #  UI over port 9443 and expose a TCP tunnel server over port 8000
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      # это сокет Unix, который демон Docker прослушивает по умолчанию, 
      # и его можно использовать для связи с демоном из контейнера
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # Отключить процессы-контейнеры от получения новых привилегий
      # Это означает, что команды, повышающие привилегии, такие как suили sudo, больше не будут работать
    security_opt:
      - no-new-privileges:true
    restart: always

  adminer:

    # image: adminer:4
    build: requirements/bonus/adminer
    container_name: adminer
    # Аналогичен always, за исключением того, что когда контейнер останавливается (вручную или иным образом), 
    # он не перезапускается даже после перезапуска демона Docker
    restart: unless-stopped
    networks:
      - project
    depends_on:
      - mariadb
    ports:
      - "8080:8080"

volumes:
  db:
    name: db
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USER}/data/db
  wp:
    name: wp
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USER}/data/wp

networks:
  project:
    driver: bridge
# Создаваемая пользователем мостовая система project позволяет 
# организовать коммуникацию между нашими контейнерами,
# поскольку они находятся на одном хосте демона Docker.
# Это позволяет организовать трафик и коммуникации внутри 
# приложения, поскольку она открывает все порты между контейнерами 
# в одной мостовой сети, скрывая все порты от внешнего мира. 
# Таким образом, наши контейнеры mariadb, wordpress и nginx могут 
# взаимодействовать друг с другом, и нам нужно будет только 
# открыть порт 440 для внешнего доступа к приложению